{"version":3,"sources":["utils/getRandomRange.js","data/animatroniks.js","data/cats.js","utils/getImg.js","serviceWorker.js","index.js","components/App/index.js"],"names":["getRandomRange","min","max","Math","floor","random","animatroniks","cats","getImg","name","data","l","length","getRandomInRange","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","question","setQuestion","_useState3","_useState4","answer","setAnswer","_useState5","_useState6","result","setResult","_useState7","_useState8","image","setImage","generateQuestion","num1","num2","answ","text","concat","restart","useEffect","className","src","alt","onClick","onKeyDown","Container","Row","Col","sm","md","size","offset","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","value","onChange","e","target","Button","color","block","res","img","toString","outline","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c820a4ba.chunk.js","sourcesContent":["export default (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n","export default [\n  \"https://i.ytimg.com/vi/sh8xncD9ke4/maxresdefault.jpg\",\n  \"https://orig00.deviantart.net/8d78/f/2016/334/0/2/_fnaf_stuff__funtime_freddy_animation_test_gif_by_teetheyhatty-daq68n1.gif\",\n  \"https://i.gifer.com/HjXT.gif\",\n  \"http://i.imgur.com/2oMwdLq.gif\",\n  \"http://orig14.deviantart.net/df20/f/2014/341/c/8/_w_i_p_mangle__gif__by_yoksaharat-d88z6la.gif\",\n  \"https://orig00.deviantart.net/40ef/f/2016/163/2/1/output_ijxzqf_by_splunny-da5y8nk.gif\",\n  \"https://cdn2.scratch.mit.edu/get_image/gallery/1724110_200x130.png\",\n  \"https://gifimage.net/wp-content/uploads/2017/10/bonnie-jumpscare-gif-7.gif\",\n  \"https://pa1.narvii.com/6636/e35a38b0605b349fd41a01aaacb265415949b3e4_hq.gif\",\n  \"https://media.giphy.com/media/AJp1pIQ3Gf5O8/giphy.gif\",\n  \"https://i.kym-cdn.com/photos/images/original/000/824/246/d78.gif\",\n  \"https://orig00.deviantart.net/3fde/f/2017/219/c/f/funtime_freddy_gif_by_popi01234-dbj7map.gif\",\n  \"http://img0.joyreactor.cc/pics/post/full/FNAF-%D0%98%D0%B3%D1%80%D1%8B-%D0%B3%D0%B8%D1%84%D0%BA%D0%B8-Five-Nights-at-Freddy%27s-4-2199858.gif\",\n  \"https://i.redd.it/kfwy0dskwdgx.gif\",\n  \"http://orig08.deviantart.net/cb53/f/2015/270/5/f/fnar3ghosttrap_jumscare_by_xgoldrobo-d9b3ctj.gif\"\n];\n","export default [\n  \"https://funpics86.ru/albums/userpics/10001/kot-snimaet-ochki.gif\",\n  \"https://i.gifer.com/M9qd.gif\",\n  \"https://uc.lolkot.ru/picture/46382-37235-9.gif\"\n];\n","import getRandomInRange from \"./getRandomRange\";\nimport animatroniks from \"../data/animatroniks\";\nimport cats from \"../data/cats\";\n\nexport default name => {\n  let data;\n\n  if (name === \"Animatronik\") {\n    data = animatroniks;\n  } else {\n    data = cats;\n  }\n\n  const l = data.length;\n  const index = getRandomInRange(0, l - 1);\n\n  return data[index];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Button,\n  Input\n} from \"reactstrap\";\n\nimport getImg from \"../../utils/getImg\";\nimport getRandomInRange from \"../../utils/getRandomRange\";\n\nimport \"./styles.css\";\n\nexport default () => {\n  const [question, setQuestion] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [result, setResult] = useState(0);\n  const [image, setImage] = useState(false);\n\n  const generateQuestion = () => {\n    const num1 = getRandomInRange(1, 10);\n    const num2 = getRandomInRange(1, 10);\n    const answ = num1 + num2;\n    const text = `${num1} + ${num2} = `;\n\n    setQuestion({\n      num1,\n      num2,\n      answ,\n      text\n    });\n  };\n\n  const restart = () => {\n    generateQuestion();\n    setResult(0);\n    setAnswer(\"\");\n  };\n\n  useEffect(() => {\n    generateQuestion();\n  }, []);\n\n  const onChange = e => setAnswer(e.target.value);\n\n  const sendAnswer = () => {\n    let res;\n    let img;\n\n    if (answer.toString() !== question.answ.toString()) {\n      res = \"Cat\";\n      img = getImg(\"Cat\");\n    } else {\n      res = \"Animatronik\";\n      img = getImg(\"Animatronik\");\n    }\n\n    setImage(img);\n\n    setResult(res);\n  };\n\n  if (result !== 0) {\n    return (\n      <div className=\"img\">\n        <img\n          src={image}\n          alt=\"картинка тут\"\n          onClick={restart}\n          onKeyDown={restart}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <Container>\n        <Row>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <InputGroup size=\"lg\">\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  {question ? question.text : \"Сборка примера\"}\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input value={answer} onChange={onChange} />\n            </InputGroup>\n\n            <Button color=\"primary\" size=\"lg\" block onClick={sendAnswer}>\n              Ответ\n            </Button>\n\n            <Button outline color=\"danger\" block onClick={generateQuestion}>\n              Замена примера\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n"],"sourceRoot":""}